<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.danbush.hltb</string>
	<key>connections</key>
	<dict>
		<key>85753215-C8BA-498A-92A9-8C219242E84A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>233D9B44-AF96-494C-B7F5-05976CA8F253</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>8DD4AC75-AE5B-4303-A693-EA5D7299DD7F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>BDA6722B-CA07-4163-914B-3E80415A3DEF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>932D137E-9894-45D6-A929-1EF9B7EF29FE</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>8DD4AC75-AE5B-4303-A693-EA5D7299DD7F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>85753215-C8BA-498A-92A9-8C219242E84A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Dan Bush, API by HLTB</string>
	<key>description</key>
	<string>How long will it take to beat a game?</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>How Long to Beat</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist='https://raw.githubusercontent.com/danbush/hltb-alfred-workflow/master/info.plist'
readonly workflow_url='https://github.com/danbush/hltb-alfred-workflow/raw/master/How%20Long%20to%20Beat.alfredworkflow'
readonly download_type='direct'
readonly frequency_check='1'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  readonly local notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  readonly local terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>BDA6722B-CA07-4163-914B-3E80415A3DEF</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>inputstring</key>
				<string>{query}</string>
				<key>matchcasesensitive</key>
				<true/>
				<key>matchmode</key>
				<integer>0</integer>
				<key>matchstring</key>
				<string>update!</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.filter</string>
			<key>uid</key>
			<string>8DD4AC75-AE5B-4303-A693-EA5D7299DD7F</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>hltb</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>2</integer>
				<key>queuemode</key>
				<integer>2</integer>
				<key>runningsubtext</key>
				<string>Let's see here...</string>
				<key>script</key>
				<string>$LOAD_PATH.unshift ("./gems/httparty-0.16.4/lib")
$LOAD_PATH.unshift ("./gems/multi_xml-0.6.0/lib")
$LOAD_PATH.unshift ("./gems/mime-types-3.2.2/lib")
$LOAD_PATH.unshift ("./gems/mime-types-data-3.2018.0812/lib")
$LOAD_PATH.unshift ("./gems/alfred-3_workflow-0.1.0/lib")

require 'httparty'
require 'alfred-3_workflow'

require 'open-uri'
require 'fileutils'

workflow = Alfred3::Workflow.new

query = "{query}"

FileUtils.rm_rf(Dir['./images/*'])

# Set some defaults
game_id = ""
game_names = ""
game_difficulties = ""
game_difficulty_labels = ""

difficulty_1 = ""
difficulty_2 = ""
difficulty_3 = ""

game_image_1 = ""
game_image_2 = ""
game_image_3 = ""

image_path_1 = ""
image_path_2 = ""
image_path_3 = ""

params = { :page =&gt; "1", :queryString =&gt; query, :t =&gt; "games", :sorthead =&gt; "popular", :sortd =&gt; "Normal%20Order", :plat =&gt; "", :length_type =&gt; "main" }

response =
  HTTParty.post("https://howlongtobeat.com/search_results.php",
  :body =&gt; params
  )

game_id = response.scan(/id=(\d{4,5}"&gt;\n&lt;)/)

game_names = response.scan(/&lt;a title="([^"]*)"/)

game_difficulty_labels = response.scan(/&lt;div class="search_list_tidbit text_white shadow_text"&gt;([^"]*)&lt;\/div&gt;/)

game_difficulties = response.scan(/&lt;div class="search_list_tidbit center time_\d+"&gt;([^"]*)&lt;\/div&gt;/)

game_image = response.scan(/&lt;img src="([^"]*)/)

if game_image[0] != nil
  game_image_1 = game_image[0].join('')
  image_path_1 = "./images/" + "image" + game_id[0].join('').sub("\"&gt;?&lt;", "") + ".jpg"
  open(image_path_1, 'wb') do |file|
    file &lt;&lt; open(game_image_1).read
  end
end

if game_image[1] != nil
  game_image_2 = game_image[1].join('')
  image_path_2 = "./images/" + "image" + game_id[1].join('').sub("\"&gt;?&lt;", "") + ".jpg"
  open(image_path_2, 'wb') do |file|
    file &lt;&lt; open(game_image_2).read
  end
end
if game_image[2] != nil
  game_image_3 = game_image[2].join('')
  image_path_3 = "./images/" + "image" + game_id[2].join('').sub("\"&gt;?&lt;", "") + ".jpg"
  open(image_path_3, 'wb') do |file|
    file &lt;&lt; open(game_image_3).read
  end
end

if game_image[0] != nil
  difficulty_1 = game_difficulties[0].join('').sub("&amp;#189;", ".5")
  difficulty_2 = game_difficulties[1].join('').sub("&amp;#189;", ".5")
  difficulty_3 = game_difficulties[2].join('').sub("&amp;#189;", ".5").sub("&lt;/div&gt;\n&lt;/div&gt; &lt;/div&gt;\n", "")
end

if game_image[1] != nil
  difficulty_4 = game_difficulties[3].join('').sub("&amp;#189;", ".5")
  difficulty_5 = game_difficulties[4].join('').sub("&amp;#189;", ".5")
  difficulty_6 = game_difficulties[5].join('').sub("&amp;#189;", ".5").sub("&lt;/div&gt;\n&lt;/div&gt; &lt;/div&gt;\n", "")
end

if game_image[2] != nil
  difficulty_7 = game_difficulties[6].join('').sub("&amp;#189;", ".5")
  difficulty_8 = game_difficulties[7].join('').sub("&amp;#189;", ".5")
  difficulty_9 = game_difficulties[8].join('').sub("&amp;#189;", ".5").sub("&lt;/div&gt;\n&lt;/div&gt; &lt;/div&gt;\n", "")
end

if query == "update!"
  workflow.result
      .title("Hit enter to update the workflow")
      .subtitle("This will pull the latest version from git. Any modifications will be overwritten.")
      .arg("update!")
elsif game_names[0] != nil
  workflow.result
        .title(game_names[0].join(''))
        .subtitle(game_difficulty_labels[0].join('') + " - " + difficulty_1 + " | " + game_difficulty_labels[1].join('') + " - " + difficulty_2 + " | " + game_difficulty_labels[2].join('') + " - " + difficulty_3)
        .icon(image_path_1)
        .arg(game_id[0].join(''))
  if difficulty_4 != nil
    workflow.result
          .title(game_names[1].join(''))
          .subtitle(game_difficulty_labels[0].join('') + " - " + difficulty_4 + " | " + game_difficulty_labels[1].join('') + " - " + difficulty_5 + " | " + game_difficulty_labels[2].join('') + " - " + difficulty_6)
          .icon(image_path_2)
          .arg(game_id[1].join(''))
  end

  if difficulty_7 != nil
    workflow.result
          .title(game_names[2].join(''))
          .subtitle(game_difficulty_labels[0].join('') + " - " + difficulty_7 + " | " + game_difficulty_labels[1].join('') + " - " + difficulty_8 + " | " + game_difficulty_labels[2].join('') + " - " + difficulty_9)
          .icon(image_path_3)
          .arg(game_id[2].join(''))
  end
else
  workflow.result
        .title("Waiting for a game name...")
        .subtitle("Example: Doom")
        .arg(query)
end
print workflow.output</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Enter a game name...</string>
				<key>title</key>
				<string>How Long To Beat...</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>932D137E-9894-45D6-A929-1EF9B7EF29FE</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>inputstring</key>
				<string>{query}</string>
				<key>matchcasesensitive</key>
				<true/>
				<key>matchmode</key>
				<integer>1</integer>
				<key>matchstring</key>
				<string>update!</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.filter</string>
			<key>uid</key>
			<string>A7A5198A-7BA7-4ECC-AB59-5F8CEBB032A5</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>inputstring</key>
				<string>{query}</string>
				<key>matchcasesensitive</key>
				<true/>
				<key>matchmode</key>
				<integer>1</integer>
				<key>matchstring</key>
				<string>update!</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.filter</string>
			<key>uid</key>
			<string>85753215-C8BA-498A-92A9-8C219242E84A</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>https://howlongtobeat.com/game.php?id={query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>233D9B44-AF96-494C-B7F5-05976CA8F253</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string></string>
	<key>uidata</key>
	<dict>
		<key>233D9B44-AF96-494C-B7F5-05976CA8F253</key>
		<dict>
			<key>xpos</key>
			<integer>440</integer>
			<key>ypos</key>
			<integer>150</integer>
		</dict>
		<key>85753215-C8BA-498A-92A9-8C219242E84A</key>
		<dict>
			<key>xpos</key>
			<integer>340</integer>
			<key>ypos</key>
			<integer>130</integer>
		</dict>
		<key>8DD4AC75-AE5B-4303-A693-EA5D7299DD7F</key>
		<dict>
			<key>xpos</key>
			<integer>340</integer>
			<key>ypos</key>
			<integer>50</integer>
		</dict>
		<key>932D137E-9894-45D6-A929-1EF9B7EF29FE</key>
		<dict>
			<key>xpos</key>
			<integer>160</integer>
			<key>ypos</key>
			<integer>80</integer>
		</dict>
		<key>A7A5198A-7BA7-4ECC-AB59-5F8CEBB032A5</key>
		<dict>
			<key>xpos</key>
			<integer>650</integer>
			<key>ypos</key>
			<integer>80</integer>
		</dict>
		<key>BDA6722B-CA07-4163-914B-3E80415A3DEF</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>440</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>1.3.2</string>
	<key>webaddress</key>
	<string>https://howlongtobeat.com/</string>
</dict>
</plist>
